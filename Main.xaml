<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="850.4,3333.6" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="814.4,3268.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="AS400" />
      <Variable x:TypeArguments="x:String" Name="Recipients" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:DatabaseConnect sap2010:Annotation.AnnotationText="connessione ad as400&#xD;&#xA;" DisplayName="Connect to database" sap:VirtualizedContainerService.HintSize="752,104" sap2010:WorkflowViewState.IdRef="DatabaseConnect_2" ProviderName="System.Data.Odbc" ConnectionString="Dsn=AS;uid=giorgiog;pwd=gior87" DatabaseConnection="[AS400]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:DatabaseConnect>
    <Assign sap:VirtualizedContainerService.HintSize="752,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Recipients]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["Bcubo.ufficioacquisti@astidental.com"]</InArgument>
      </Assign.Value>
    </Assign>
    <umab:ExchangeApplicationCard ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" SharedMailbox="{x:Null}" Account="Bcubo@astidental.com" DisplayName="Use Outlook 365" EmailAddress="Bcubo@astidental.com" sap:VirtualizedContainerService.HintSize="752,2891.2" sap2010:WorkflowViewState.IdRef="ExchangeApplicationCard_1" UseConnectionService="False">
      <umab:ExchangeApplicationCard.ApplicationId>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </umab:ExchangeApplicationCard.ApplicationId>
      <umab:ExchangeApplicationCard.Body>
        <ActivityAction x:TypeArguments="um:IMailQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Exchange" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="718.4,2666.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="DAAS400C" />
              <Variable x:TypeArguments="sd:DataTable" Name="DAAS400R" />
              <Variable x:TypeArguments="sd:DataTable" Name="DAAS400D" />
              <Variable x:TypeArguments="sd:DataTable" Name="ARTNORW" />
              <Variable x:TypeArguments="sd:DataTable" Name="ARTRW" />
              <Variable x:TypeArguments="sd:DataTable" Name="ConteggioTable" />
              <Variable x:TypeArguments="x:String" Name="variable1" />
              <Variable x:TypeArguments="x:String" Name="Conteggio" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[DAAS400C]" DisplayName="Run query" ExistingDbConnection="[AS400]" sap:VirtualizedContainerService.HintSize="656,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="select cod_art,desc_art,cod_fornitore,desc_fornitore,tot_giacenza,tot_impegni,tot_ordini_fornitore,tot_collaudo,classe_apt&#xA;&#xA;from (&#xA;&#xA;select cdarme as cod_art,main.dsarma as desc_art,foabma as cod_fornitore,dscocp as desc_fornitore,sum(giatme) as tot_giacenza,sum(impcme) as tot_impegni,sum(ordfme) as tot_ordini_fornitore,sum(atcome) as tot_collaudo,zuno.cl03ma as classe_APT&#xA;from ast80dat.mgesi00f&#xA;left join ast80dat.mgart00f main on main.cdarma = cdarme&#xA;left join ast80dat.mgart01f zuno on cdarme = zuno.cdarma&#xA;left join ast80dat.cgana01j on foabma = contca&#xA;where cdmgme in ('100','103','101','105') and zuno.cl03ma in ('R','W')&#xA;group by cdarme,main.dsarma,zuno.cl03ma,foabma,dscocp&#xA;)&#xA;where tot_giacenza+tot_ordini_fornitore+tot_collaudo &lt; tot_impegni and tot_impegni &gt; 0&#xA;ORDER BY CLASSE_APT">
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
            </ui:ExecuteQuery>
            <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[ConteggioTable]" DisplayName="Run query" ExistingDbConnection="[AS400]" sap:VirtualizedContainerService.HintSize="656,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="&#xA;select count(*) as conteggio from (select cod_art,desc_art,cod_fornitore,desc_fornitore,tot_giacenza,tot_impegni,tot_ordini_fornitore,tot_collaudo,classe_apt&#xA;&#xA;from (&#xA;&#xA;select cdarme as cod_art,main.dsarma as desc_art,foabma as cod_fornitore,dscocp as desc_fornitore,sum(giatme) as tot_giacenza,sum(impcme) as tot_impegni,sum(ordfme) as tot_ordini_fornitore,sum(atcome) as tot_collaudo,zuno.cl03ma as classe_APT&#xA;from ast80dat.mgesi00f&#xA;left join ast80dat.mgart00f main on main.cdarma = cdarme&#xA;left join ast80dat.mgart01f zuno on cdarme = zuno.cdarma&#xA;left join ast80dat.cgana01j on foabma = contca&#xA;where cdmgme in ('100','103','101','105') and zuno.cl03ma in ('R','W')&#xA;group by cdarme,main.dsarma,zuno.cl03ma,foabma,dscocp&#xA;)&#xA;where tot_giacenza+tot_ordini_fornitore+tot_collaudo &lt; tot_impegni and tot_impegni &gt; 0&#xA;ORDER BY CLASSE_APT) ">
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
            </ui:ExecuteQuery>
            <Assign sap:VirtualizedContainerService.HintSize="656,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[Conteggio]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[conteggioTable.Rows(0)(0).ToString()]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[Conteggio &lt;&gt; &quot;0&quot;]" sap:VirtualizedContainerService.HintSize="656,2173.6" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="622.4,1531.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="579.2,1004" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2" ShowExcelWindow="False">
                    <ueab:ExcelProcessScopeX.Body>
                      <ActivityAction x:TypeArguments="ui:IExcelProcess">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="545.6,917.6" sap2010:WorkflowViewState.IdRef="Sequence_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="483.2,805.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" WorkbookPath="Articoli_R_W.xlsx">
                            <ueab:ExcelApplicationCard.Body>
                              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,536" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:ClearRangeX DisplayName="Clear Sheet/Range/Table" HasHeaders="False" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ClearRangeX_2" TargetRange="[Excel.Sheet(&quot;Articoli_R_W&quot;)]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:ClearRangeX>
                                  <ueab:InsertSheetX DisplayName="Insert Sheet" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="InsertSheetX_2" Name="Articoli_R_W" Workbook="[Excel]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:InsertSheetX>
                                  <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Articoli_R_W&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="False" Source="[DAAS400C]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:WriteRangeX>
                                  <ueab:DeleteSheetX DisplayName="Delete Sheet" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="DeleteSheetX_2" Sheet="[Excel.Sheet(&quot;Foglio1&quot;)]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:DeleteSheetX>
                                  <ueab:CreateTableX OutTableName="{x:Null}" TableName="{x:Null}" DisplayName="Format as Table" HasHeaders="True" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="CreateTableX_2" Range="[Excel.Sheet(&quot;Articoli_R_W&quot;)]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:CreateTableX>
                                </Sequence>
                              </ActivityAction>
                            </ueab:ExcelApplicationCard.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ueab:ExcelApplicationCard>
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelProcessScopeX.Body>
                  </ueab:ExcelProcessScopeX>
                  <umab:SendMailX Bcc="{x:Null}" Body="{x:Null}" Cc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Exchange]" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="579.2,397.6" sap2010:WorkflowViewState.IdRef="SendMailX_5" Importance="Normal" IsDraft="False" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="Articoli R e W" To="[Recipients]" UseDocumentAsBody="False">
                    <umab:SendMailX.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                        <InArgument x:TypeArguments="x:String">Articoli_R_W.xlsx</InArgument>
                      </scg:List>
                    </umab:SendMailX.Files>
                    <umab:SendMailX.HtmlBodyFromFile>
                      <umabh:HtmlContentArgument FilePath=".data/HtmlContent3.html">
                        <umabh:HtmlContentArgument.RuntimeImages>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </umabh:HtmlContentArgument.RuntimeImages>
                        <umabh:HtmlContentArgument.ValueMappings>
                          <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="4">
                            <umabh:HtmlTextValueMapping Name="ConteggioToMail" Value="[Conteggio]" />
                          </scg:List>
                        </umabh:HtmlContentArgument.ValueMappings>
                      </umabh:HtmlContentArgument>
                    </umab:SendMailX.HtmlBodyFromFile>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </umab:SendMailX>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="476.8,459.2" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <umab:SendMailX Bcc="{x:Null}" Body="{x:Null}" Cc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Exchange]" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="433.6,369.6" sap2010:WorkflowViewState.IdRef="SendMailX_6" Importance="Normal" IsDraft="False" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="Articoli R e W" To="[Recipients]" UseDocumentAsBody="False">
                    <umab:SendMailX.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </umab:SendMailX.Files>
                    <umab:SendMailX.HtmlBodyFromFile>
                      <umabh:HtmlContentArgument FilePath=".data/HtmlContent4.html">
                        <umabh:HtmlContentArgument.RuntimeImages>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </umabh:HtmlContentArgument.RuntimeImages>
                        <umabh:HtmlContentArgument.ValueMappings>
                          <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="4">
                            <umabh:HtmlTextValueMapping Name="ConteggioToMail" Value="[Conteggio]" />
                          </scg:List>
                        </umabh:HtmlContentArgument.ValueMappings>
                      </umabh:HtmlContentArgument>
                    </umab:SendMailX.HtmlBodyFromFile>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </umab:SendMailX>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </umab:ExchangeApplicationCard.Body>
      <umab:ExchangeApplicationCard.TenantId>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </umab:ExchangeApplicationCard.TenantId>
    </umab:ExchangeApplicationCard>
  </Sequence>
</Activity>